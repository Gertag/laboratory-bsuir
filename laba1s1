# Object files
*.o
*.ko
*.obj
*.elf

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <conio.h>
#include <string.h>
/*---------------------------------------------*/
typedef struct str 
{
	int i1;
	char *ch1;
	struct
	{
		float fl1;
		char ch2[20];
	}str2;
}str1;
/*---------------------------------------------*/
void new_el (str *p,int n);
void poisk (str *p,int n);
void output_str(str *p,int n);
int del (str *p,int n);
int menu(str *p,int n);
int add(str *p,int n);
/*---------------------------------------------*/
int main()
{
	setlocale(LC_ALL,"Russian");
	str *st;
	int n;
	printf("Введите размер структуры\n");
	scanf("%d",&n);
	if(!(st =(str *)calloc(n,sizeof(str)))){printf("EOM!!");getch();return 0;};
	menu(st,n);
	for (int i = 0;i<n;i++)
	{
		free(&st->ch1);
	}
	free(st);
	return 0;
}
/*-------------------------------------------*/
int menu(str *p,int n)
{
	printf("\n1 - Создание структуры\n2 - Вывод массива структур\n3 - Удаление элемента по заданным параметрам\n4 - Поиск элемента по параметру\n");
	
	printf("0 - Exit");
	switch (getch())
	{
	case '1':new_el(p,n);break;
	case '2':output_str(p,n);break;
	case '3':del (p,n);break;
	case '4':poisk(p,n);break;
	case '0':return n;
	default:printf("Error!!");break;
	}
	system("cls");
	menu(p,n);
}
/*---------------------------------------------*/
void new_el(str *p,int n)
{
	if(!(p)){printf("Struct not create!");getch();return;}
	for (int i = 0;i<n;i++)
	{
		printf("\nВведите i1\n");
		scanf("%d",&p[i].i1);
		fflush(stdin);
		if(!(p[i].ch1 = (char *)calloc(20,sizeof(char)))){printf("EOM!!");getch();return;};
		printf("Введите ch1\n");
		scanf("%s",&p[i].ch1);
		fflush(stdin);
		//gets(p[i].ch1);
		printf("Введите fl1\n");
		scanf("%f",&p[i].str2.fl1);
		fflush(stdin);
		printf("Введите ch2\n");
		scanf("%s",&p[i].str2.ch2);
		fflush(stdin);
		//gets(p[i].str2.ch2);
	}
	system("cls");
}
/*--------------------------------------*/
void output_str(str *p,int n)
{
	if (!(p)){printf("Struct not created\n");getch();return;}
	for (int i = 0;i<n;i++)
	{
		printf("\nstr №%d\n",i+1);
		printf("i1 - %d\n",p[i].i1);
		printf("ch1 - %s\n",&p[i].ch1);
		printf("fl1 - %f\n",p[i].str2.fl1);
		printf("ch2 - %s\n",&p[i].str2.ch2);
	}
	getch();
	system("cls");
}
/*-----------------------------------------------*/
void poisk(str*p, int n)
{
	if(!(p)){printf("Struct not create!");getch();return;}
	printf("введите параметр поиска");
	printf("\n1 - i1\n2 - ch1\n3 - fl1\n4 - ch2\n");
	printf("0 - Exit");
	switch (getch())
	{
	case '1':{printf("\nвведите необходимыный i1\n");
	fflush(stdin);
	int c=0,s=0;
	scanf("%d",&s);
	for(int i=0; i<n; i++)
	{if(p[i].i1==s)printf("i%d - %d\n",i,p[i].i1);c++;};
	if(!c)printf("данный элемент отсутствует\n");
	break;
	}
	case '2':{printf("введите необходимыный ch1\n");
	fflush(stdin);
	int c=0,s=0;
	scanf("%d",&s);
	for(int i=0; i<n; i++)
	{if(*p[i].ch1==s)printf("i%d - %d\n",i,&p[i].ch1);c++;};
	if(!c)printf("данный элемент отсутствует\n");
	break;}
	case '3':{printf("введите необходимыный fl1\n");
	fflush(stdin);
	int c=0,s=0;
	scanf("%d",&s);
	for(int i=0; i<n; i++)
	{if(p[i].str2.fl1==s)printf("i%d - %d\n",i,p[i].str2.fl1);c++;};
	if(!c)printf("данный элемент отсутствует\n");
	break;}
	case '4':{printf("введите необходимыный ch2\n");
	fflush(stdin);
	int c=0,s=0;
	scanf("%d",&s);
	for(int i=0; i<n; i++)
	{if(*p[i].str2.ch2==s)printf("i%d - %d\n",i,&p[i].str2.ch2);c++;};
	if(!c)printf("данный элемент отсутствует\n");
	break;}
	//case '0':return n;
	default:printf("Error!!\n");break;
	}
}
/*-------------------------------------------------------*/
int del (str *p,int n)
{
	if(!(p)){printf("Struct not create!\n");getch();return 1;}
	printf("введите параметр удаления\n");
	int c=0,s=0;
	fflush(stdin);
	s=getchar();
	for(int i=0; i<n; i++)
	{if(p[i].str2.fl1==s)
	{c++;for(i; i<n; i++)
	p[i]=p[i+1]
	n--;
	i=c;}}
	
}
